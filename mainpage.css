/*
 * mainpage.css
 *
 * This stylesheet defines the visual presentation for the Modding Hub main page.
 * It includes styles for the overall layout, typography, interactive elements,
 * background effects, and implements a dynamic dark mode with a toggle.
 * The dark mode now features an animation for the profile picture to disappear
 * smoothly, ensuring it starts moving from its current position, and
 * re-centers the remaining content for a streamlined look.
 */

/*
 * --- Global Reset and Base Styles ---
 * Applies a universal reset to all elements to ensure consistent rendering
 * across different browsers by removing default margins and paddings.
 * 'box-sizing: border-box' ensures that padding and borders are included
 * in an element's total width and height, simplifying layout calculations.
 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/*
 * --- Body Styles (Base for Light Mode) ---
 * Sets the default font family for the entire page, defines positioning
 * for fixed elements, ensures the page takes at least the full viewport height,
 * and prevents horizontal scrolling.
 * It also defines CSS variables for light mode colors, which serve as
 * the default values and are then smoothly transitioned to dark mode values.
 */
body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  position: relative; /* Essential for correctly positioning children with 'position: fixed' or 'absolute' */
  min-height: 100vh; /* Guarantees the body stretches to at least the full height of the browser window */
  overflow-x: hidden; /* Prevents any horizontal scrollbars from appearing */

  /* CSS Variables for Light Mode Color Palette */
  --text-color-primary: #2d3748; /* Main headings and primary text color */
  --text-color-secondary: #718096; /* Secondary text, such as taglines and descriptions */
  --bg-color-main: rgba(255, 255, 255, 0.95); /* Background for main content sections and interactive cards/buttons */
  --bg-color-dropdown: rgba(255, 255, 255, 0.98); /* Background for the sliding dropdown navigation menu */
  --border-color-button: rgba(255, 255, 255, 0.2); /* Border color for interactive elements like navigation buttons */
  --box-shadow-button: rgba(0, 0, 0, 0.08); /* Soft box shadow for interactive buttons */
  --box-shadow-profile-pic: rgba(0, 0, 0, 0.15); /* Box shadow specifically for the profile picture */
  --border-color-profile-pic: rgba(255, 255, 255, 0.8); /* Border color for the profile picture */
  --dropdown-item-border: rgba(0, 0, 0, 0.05); /* Subtle border separating items within the dropdown menu */
  --menu-icon-bar-color: #00FFFF; /* Color of the hamburger menu bars (Aqua) */
  --body-bg-color: transparent; /* Default body background, set to transparent to allow the background image to show */
  --main-container-justify: center; /* Default vertical alignment for main content */

  /* Smooth Transitions for Theme Changes */
  /* Applies a smooth animation when CSS variable values change (e.g., during dark mode toggle) */
  transition:
    background-color 0.5s ease,
    color 0.5s ease,
    border-color 0.5s ease,
    box-shadow 0.5s ease;
}

/*
 * --- Dark Mode Styles ---
 * This block defines the overrides for CSS variables when the 'dark-mode'
 * class is added to the <body> element. These changes transform the page's
 * aesthetic to a dark theme, with darker backgrounds and lighter text for readability.
 */
body.dark-mode {
  --text-color-primary: #ecf0f1; /* Lighter, almost white text for main content in dark mode */
  --text-color-secondary: #bdc3c7; /* Slightly darker secondary text for subtle contrast */
  --bg-color-main: rgba(44, 62, 80, 0.95); /* Dark background for main content cards/buttons in dark mode */
  --bg-color-dropdown: rgba(52, 73, 94, 0.98); /* Darker background for the dropdown menu */
  --border-color-button: rgba(255, 255, 255, 0.1); /* Lighter border for buttons in dark mode */
  --box-shadow-button: rgba(0, 0, 0, 0.3); /* Stronger box shadow for a deeper effect in dark mode */
  --box-shadow-profile-pic: rgba(0, 0, 0, 0.5); /* More prominent shadow for the profile picture in dark mode */
  --border-color-profile-pic: rgba(255, 255, 255, 0.3); /* Lighter border for the profile picture */
  --dropdown-item-border: rgba(255, 255, 255, 0.1); /* Lighter border for dropdown items */
  --menu-icon-bar-color: #fcccfd; /* Pinkish color for the menu icon in dark mode */
  --body-bg-color: #1a202c; /* Solid dark background color when the image is hidden */
  --main-container-justify: flex-start; /* Adjust vertical alignment to compensate for disappearing profile pic */
}


/*
 * --- Blurred Background Pseudo-element (Light Mode) ---
 * This pseudo-element creates a fixed background image that spans the entire viewport.
 * It is designed to be fully visible in light mode and gradually hidden in dark mode.
 */
body::before {
  content: ''; /* Required property for pseudo-elements */
  position: fixed; /* Ensures the background stays in place during scrolling */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url('background.png') center center / cover no-repeat fixed; /* Sets the background image, centers it, covers the area, and fixes its position */
  z-index: -1; /* Positions the background behind all other content */
  opacity: 1; /* Fully visible by default in light mode */
  transition: opacity 0.5s ease; /* Smooth transition for fading the background in/out */
}

/*
 * --- Hide Background in Dark Mode ---
 * When the 'dark-mode' class is active on the body, this rule makes the
 * background image completely transparent, effectively hiding it.
 */
body.dark-mode::before {
  opacity: 0; /* Fades out the background image */
}

/*
 * --- Solid Background for Dark Mode ---
 * This rule applies a solid dark background color to the body when dark mode
 * is active. This replaces the background image which is hidden, providing
 * a clean dark aesthetic.
 */
body.dark-mode {
    background-color: var(--body-bg-color); /* Applies the solid dark background color defined in --body-bg-color */
}

/*
 * --- Animated Background Particles ---
 * Styles for the small, decorative particles that float across the screen,
 * adding a subtle, dynamic visual effect.
 */
.bg-particles {
  position: fixed; /* Keeps particles fixed relative to the viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Ensures clicks and interactions pass through the particles to elements beneath them */
  z-index: -1; /* Places particles behind all other content */
}

.particle {
  position: absolute; /* Allows individual positioning of each particle within its container */
  width: 4px;
  height: 4px;
  background: rgba(255, 255, 255, 0.3); /* Semi-transparent white color for the particles */
  border-radius: 50%; /* Makes each particle perfectly circular */
  animation: float 6s ease-in-out infinite; /* Applies the 'float' animation, repeating indefinitely */
}

/* Adjusts the animation start times and durations for odd-numbered particles
 * to create a more varied and less repetitive floating effect.
 */
.particle:nth-child(odd) {
  animation-delay: -2s;
  animation-duration: 8s;
}

/* Adjusts the animation start times and durations for even-numbered particles
 * to further enhance the randomness of the floating effect.
 */
.particle:nth-child(even) {
  animation-delay: -4s;
  animation-duration: 10s;
}

/*
 * --- Keyframes for the 'float' animation ---
 * Defines the movement and opacity changes for the background particles.
 * Particles move from the bottom to the top of the screen, fading in and out.
 */
@keyframes float {
  0%, 100% {
    transform: translateY(100vh) rotate(0deg); /* Particles start at the bottom of the viewport, no rotation */
    opacity: 0; /* Fully transparent at the beginning and end of the animation cycle */
  }
  10% {
    opacity: 1; /* Particles become fully opaque shortly after starting to float */
  }
  90% {
    opacity: 1; /* Particles remain fully opaque until near the end of their float */
  }
  100% {
    transform: translateY(-10vh) rotate(360deg); /* Particles move past the top of the viewport and complete one full rotation */
    opacity: 0; /* Fade out completely as they exit the top */
  }
}

/*
 * --- Main Content Container ---
 * This container wraps the primary content sections of the page.
 * It uses flexbox to center its children (header and navigation) vertically and horizontally,
 * ensuring responsive alignment. The vertical alignment can change based on the theme.
 */
.main-container {
  position: relative;
  min-height: 100vh; /* Ensures the container takes at least the full viewport height */
  display: flex; /* Enables flexbox layout */
  flex-direction: column; /* Stacks children vertically */
  align-items: center; /* Centers children horizontally within the container */
  justify-content: var(--main-container-justify); /* Vertical centering controlled by CSS variable */
  padding: 2rem; /* Overall padding around the main content */
  padding-top: 20px; /* Additional padding from the top edge */
  transition: justify-content 0.8s ease-out; /* Smooth transition for vertical centering change */
}

/* Adjust margin in dark mode to compensate for disappearing profile pic */
body.dark-mode .header-section {
    margin-bottom: 1rem; /* Reduced margin to bring text/buttons closer */
}

/*
 * --- Header Section Styles ---
 * This section contains the main introductory elements: the profile picture,
 * the site's primary title, and a descriptive tagline.
 * It includes a subtle slide-in animation when the page loads.
 */
.header-section {
  text-align: center; /* Centers text content within the header */
  margin-bottom: 3rem; /* Provides spacing between the header and the navigation buttons */
  animation: slideInDown 1s ease-out; /* Applies a top-down slide-in animation on load */
  width: 100%; /* Ensures the header spans the full width available */
  max-width: 600px; /* Limits the maximum width of the header section */
  transition: margin-bottom 0.8s ease-out; /* Smooth transition for margin adjustment in dark mode */
}

/* Adjust margin in dark mode to compensate for disappearing profile pic */
body.dark-mode .header-section {
    margin-bottom: 1rem; /* Reduced margin to bring text/buttons closer */
}

/*
 * --- Keyframes for the 'slideInDown' animation ---
 * Defines a simple animation where an element slides into view from slightly above
 * its final position while fading in.
 */
@keyframes slideInDown {
  from {
    opacity: 0; /* Starts completely invisible */
    transform: translateY(-50px); /* Starts 50 pixels above its final position */
  }
  to {
    opacity: 1; /* Ends fully visible */
    transform: translateY(0); /* Ends at its original position */
  }
}

/*
 * --- Profile Picture Styles (Light Mode) ---
 * Defines the appearance and initial state of the profile picture.
 * Includes a subtle hover effect and uses CSS variables for colors.
 */
.profile-pic {
  width: 300px;
  height: 300px;
  object-fit: cover; /* Ensures the image covers the entire area without distortion */
  border-radius: 50%; /* Makes the image perfectly circular */
  margin: 0 auto 1.5rem; /* Centers horizontally, adds a bottom margin */
  display: block; /* Ensures that 'margin: auto' works for horizontal centering */
  box-shadow: 0 8px 24px var(--box-shadow-profile-pic); /* Dynamic box shadow based on theme */
  border: 4px solid var(--border-color-profile-pic); /* Dynamic border based on theme */
  transform: translateY(0); /* Explicitly set initial transform to prevent jumps */
  /*
   * Updated transition for smoother disappearance:
   * - transform: 0.8s ease-out (smooth upward movement)
   * - opacity: 0.3s ease-out (fast fade-out, completing well before transform finishes)
   * - margin-bottom: 0.8s ease-out (smooth margin collapse)
   * This ensures the profile picture fades completely before reaching its final upward position,
   * making the disappearance look natural rather than a sudden jump followed by a fade.
   */
  transition: transform 0.8s ease-out, opacity 0.3s ease-out, margin-bottom 0.8s ease-out;
}

/*
 * --- Profile Picture Hover Effect (Light Mode) ---
 * Slightly scales the profile picture when the user hovers over it.
 */
.profile-pic:hover {
  transform: scale(1.05); /* Enlarges the image by 5% on hover */
}

/*
 * --- Profile Picture Animation in Dark Mode ---
 * When dark mode is active, the profile picture animates by shifting upwards
 * and fading out, then becomes non-interactive. The opacity transition is
 * shorter than the transform to ensure it disappears completely before its upward travel is done.
 */
body.dark-mode .profile-pic {
  transform: translateY(-200px); /* Moves the image 200px upwards */
  opacity: 0; /* Fades the image out completely */
  pointer-events: none; /* Prevents interaction (e.g., clicks) with the invisible element */
  margin-bottom: 0; /* Removes the bottom margin to allow content below to move up */
}


/*
 * --- Main Title (h1) Styles ---
 * Defines the visual properties for the primary heading of the page.
 */
h1 {
  font-size: 3rem; /* Large font size for prominence */
  font-weight: 800; /* Extra bold font weight */
  color: var(--text-color-primary); /* Dynamic text color based on theme */
  margin-bottom: 1rem; /* Space below the heading */
  letter-spacing: -1px; /* Slightly tighter letter spacing for a modern look */
  text-align: center; /* Centers the text */
}

/*
 * --- Tagline Paragraph Styles ---
 * Defines the visual properties for the descriptive tagline below the main title.
 */
.tagline {
  font-size: 1.25rem; /* Moderate font size for readability */
  color: var(--text-color-secondary); /* Dynamic text color for secondary information */
  font-weight: 400; /* Regular font weight */
  line-height: 1.5; /* Increased line height for better readability of multiple lines */
  text-align: center; /* Centers the text */
}

/*
 * --- Main Navigation Container ---
 * This container organizes the primary navigation links into a responsive grid.
 * It's set to appear with a fade-in-up animation on page load.
 */
.main-nav-container {
  display: grid; /* Uses CSS Grid for a flexible 2x2 layout */
  grid-template-columns: repeat(2, 1fr); /* Creates two columns of equal width */
  gap: 2rem; /* Sets the spacing between grid items (navigation buttons) */
  max-width: 1000px; /* Limits the maximum width of the navigation grid */
  width: 100%; /* Ensures the grid takes up the available width within its parent */
  animation: fadeInUp 1s ease-out 0.3s both; /* Applies a fade-in-up animation after a delay */
}

/*
 * --- Magnetic Button Wrapper ---
 * A wrapper for each navigation button, used to enable the custom
 * "magnetic" hover effect and centering the button within its grid cell.
 */
.magnetic-button-wrapper {
  position: relative; /* Needed for positioning child elements relative to this wrapper */
  cursor: pointer; /* Indicates that the element is interactive */
  display: flex; /* Uses flexbox to center the button content */
  justify-content: center; /* Centers the button horizontally */
  align-items: center; /* Centers the button vertically */
}

/*
 * --- Main Navigation Buttons (Magnetic with Break Effect) ---
 * Defines the core styling for the interactive navigation buttons.
 * Includes properties for layout, text, background, shadows, and base transitions.
 */
.main-nav-button.magnetic-button {
  position: relative; /* Needed for positioning pseudo-elements and button fragments */
  display: flex; /* Uses flexbox to arrange internal text fragments */
  flex-direction: column; /* Stacks text fragments vertically */
  justify-content: center; /* Centers content vertically */
  align-items: center; /* Centers content horizontally */
  text-decoration: none; /* Removes the default underline from anchor tags */
  color: var(--text-color-primary); /* Dynamic text color based on theme */
  font-weight: 600; /* Semi-bold text */
  font-size: 1.3rem; /* Base font size for button text */
  width: 100%; /* Makes the button take the full width of its parent wrapper */
  height: 200px; /* Fixed height for consistent button sizing */
  max-width: 450px; /* Limits the maximum width of individual buttons */
  border-radius: 16px; /* Applies rounded corners to the button */
  overflow: hidden; /* Ensures that content (like sliding overlays) stays within the rounded borders */
  background: var(--bg-color-main); /* Dynamic background color based on theme */
  backdrop-filter: blur(10px); /* Applies a blur effect to anything behind the button, creating a frosted glass look */
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* A complex easing function for smooth, slightly bouncy transitions */
  box-shadow: 0 4px 20px var(--box-shadow-button); /* Dynamic box shadow based on theme */
  border: 1px solid var(--border-color-button); /* Dynamic border color based on theme */
  transform: translateY(0); /* Base transform state (no vertical translation) */
  text-align: center; /* Centers the text content within the button */
}

/*
 * --- Sliding Overlay Animation for Main Nav Buttons ---
 * Creates a vibrant gradient overlay that slides across the button on hover.
 * This provides a dynamic visual feedback when the button is interacted with.
 */
.main-nav-button.magnetic-button::after {
  content: ''; /* Required for pseudo-elements */
  position: absolute; /* Positions the overlay relative to its parent button */
  top: 0;
  left: -100%; /* Starts the overlay off-screen to the left */
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, #00FFFF, #fcccfd); /* Aqua to Lighter Pink gradient */
  transform: skewX(-45deg); /* Skews the overlay to create a diagonal slide effect */
  transform-origin: center; /* Ensures the skew rotation is from the center */
  transition: left 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Smooth transition for the overlay's movement */
  z-index: 1; /* Ensures the overlay is above the button's background but below the text fragments */
}

/* Moves the gradient overlay into full view when the button wrapper is hovered */
.magnetic-button-wrapper:hover .main-nav-button.magnetic-button::after {
  left: 0%;
}

/*
 * --- Text Color Change on Hover for Main Nav Buttons ---
 * Changes the text color of the button to white when the button wrapper is hovered,
 * providing clear contrast against the sliding gradient overlay.
 */
.magnetic-button-wrapper:hover .main-nav-button.magnetic-button {
  color: white;
}

/*
 * --- Button Fragments for Break Effect ---
 * Container for the distinct text elements (main title and description) within
 * the button. These fragments are animated to "break apart" on hover.
 */
.button-fragments {
  position: relative; /* Needed for positioning fragments */
  width: 100%;
  height: 100%;
  z-index: 2; /* Ensures fragments are above the sliding overlay */
  display: flex; /* Uses flexbox to arrange fragments */
  flex-direction: column; /* Stacks fragments vertically */
  justify-content: center; /* Centers fragments vertically within the button */
  align-items: center; /* Centers fragments horizontally within the button */
}

.fragment {
  position: relative;
  transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Smooth, slightly bouncy transition for fragment movement */
  transform-origin: center; /* Ensures transformations are applied from the center of the fragment */
  z-index: 2; /* Keeps fragments above other background elements */
}

.fragment-1 {
  margin-bottom: 0.5rem; /* Provides a small vertical gap between the main title and description */
}

.fragment-1 span {
  position: relative;
  z-index: 2;
  display: block;
  font-size: 1.5rem; /* Font size for the main button text (e.g., "Modding Repository") */
}

.fragment-2 .nav-description {
  position: relative;
  z-index: 2;
  color: var(--text-color-secondary); /* Dynamic color for the descriptive text */
  font-size: 1rem; /* Font size for the navigation description */
  font-weight: 400; /* Regular font weight */
  line-height: 1.5; /* Improved line height for readability */
}

/*
 * --- Update Description Text Color on Hover ---
 * Changes the color of the navigation description text to a slightly transparent white
 * when the button is hovered, providing contrast against the overlay.
 */
.magnetic-button-wrapper:hover .fragment-2 .nav-description {
  color: rgba(255, 255, 255, 0.9);
}

/*
 * --- Magnetic Hover Effect for Buttons ---
 * Applies a subtle vertical lift and slight scale transformation to the button
 * when its wrapper is hovered, creating a "magnetic" pull effect.
 */
.magnetic-button-wrapper:hover .main-nav-button {
  transform: translateY(-8px) scale(1.02); /* Moves button up by 8px and scales it slightly */
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15); /* Expands and darkens the box shadow */
  border-color: rgba(102, 126, 234, 0.3); /* Changes the border color on hover */
}

/*
 * --- Break Apart Effect on Hover ---
 * Animates the two text fragments within the button to separate horizontally
 * and rotate slightly when the button wrapper is hovered, creating a "break apart" visual.
 */
.magnetic-button-wrapper:hover .fragment-1 {
  transform: translateX(-15px) translateY(-5px) rotate(-2deg); /* Moves the first fragment left and rotates it */
}

.magnetic-button-wrapper:hover .fragment-2 {
  transform: translateX(15px) translateY(5px) rotate(2deg); /* Moves the second fragment right and rotates it */
}

/*
 * --- Subtle Glow Effect on Hover ---
 * Creates a subtle gradient "glow" pseudo-element that appears behind the button
 * on hover, enhancing the visual feedback.
 */
.magnetic-button-wrapper:hover .main-nav-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, rgba(108, 92, 231, 0.1), rgba(252, 204, 253, 0.1)); /* Light gradient for the glow */
  z-index: 1; /* Positions the glow behind the button's content but above its background */
  opacity: 1; /* Makes the glow fully visible on hover */
  transition: opacity 0.3s ease; /* Smooth transition for the glow's appearance */
}

.main-nav-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, rgba(108, 92, 231, 0.1), rgba(252, 204, 253, 0.1));
  z-index: 1;
  opacity: 0; /* Hidden by default */
  transition: opacity 0.3s ease;
}

/*
 * --- Keyframes for the 'fadeInUp' animation ---
 * Defines a simple animation where an element slides into view from slightly below
 * its final position while fading in. Used for the main navigation container.
 */
@keyframes fadeInUp {
  from {
    opacity: 0; /* Starts completely invisible */
    transform: translateY(30px); /* Starts 30 pixels below its final position */
  }
  to {
    opacity: 1; /* Ends fully visible */
    transform: translateY(0); /* Ends at its original position */
  }
}

/*
 * --- Hamburger Menu Icon ---
 * Styles for the clickable icon that toggles the side-panel menu.
 * Its position is fixed to the top-left of the viewport.
 */
.menu-icon {
  position: fixed; /* Stays in place during scrolling */
  top: 20px;
  left: 20px;
  width: 50px;
  height: 40px;
  display: flex; /* Uses flexbox for layout of the bars */
  flex-direction: column; /* Stacks the bars vertically */
  justify-content: space-between; /* Distributes space evenly between the bars */
  cursor: pointer; /* Indicates the element is clickable */
  z-index: 101; /* Ensures the menu icon is on top of most other elements */
}

.menu-icon .bar {
  width: 100%; /* Each bar spans the full width of the icon container */
  height: 5px; /* Height of each bar */
  background: var(--menu-icon-bar-color); /* Dynamic color based on theme */
  border-radius: 3px; /* Rounded corners for the bars */
  transition: all 0.3s ease-in-out; /* Smooth transition for the bar animations (e.g., transforming into an 'X') */
}

/*
 * --- Menu Icon Active State ---
 * These rules define how the hamburger menu bars transform into an 'X'
 * when the menu is active (i.e., when the 'active' class is applied).
 */
.menu-icon.active .bar:nth-child(1) {
  transform: translateY(17.5px) rotate(45deg); /* Moves the top bar down and rotates it */
}

.menu-icon.active .bar:nth-child(2) {
  opacity: 0; /* Fades out the middle bar */
}

.menu-icon.active .bar:nth-child(3) {
  transform: translateY(-17.5px) rotate(-45deg); /* Moves the bottom bar up and rotates it */
}

/*
 * --- Dropdown Menu ---
 * Styles for the navigation menu that slides in from the left.
 * It's positioned fixed to cover the left portion of the screen.
 */
.dropdown-menu {
  position: fixed; /* Stays in place during scrolling */
  top: 0;
  left: 0;
  width: 250px; /* Fixed width of the dropdown menu */
  background: var(--bg-color-dropdown); /* Dynamic background color based on theme */
  backdrop-filter: blur(15px); /* Stronger blur effect for the menu background */
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1); /* Shadow on the right side of the menu */
  transform: translateX(-100%); /* Initially hides the menu completely off-screen to the left */
  transition: transform 0.4s ease-in-out; /* Smooth slide-in/out transition */
  padding-top: 80px; /* Space from the top to avoid overlapping the menu icon */
  z-index: 99; /* Positions the menu below the hamburger icon but above main content */
  display: flex; /* Uses flexbox for item layout */
  flex-direction: column; /* Stacks menu items vertically */
  max-height: calc(100vh - 40px); /* Limits the menu height to slightly less than the viewport height */
  overflow-y: auto; /* Adds a scrollbar if menu content exceeds its max height */
  border-bottom-right-radius: 10px; /* Rounded corner at the bottom-right of the menu */
}

/*
 * --- Dropdown Menu Open State ---
 * When the 'open' class is applied, this rule slides the dropdown menu
 * into full view.
 */
.dropdown-menu.open {
  transform: translateX(0); /* Moves the menu into the viewport */
}

/*
 * --- Dropdown Menu Items ---
 * Styles for individual links within the dropdown navigation menu.
 */
.dropdown-item {
  padding: 15px 20px; /* Padding inside each menu item */
  text-decoration: none; /* Removes underlines from links */
  color: var(--text-color-primary); /* Dynamic text color based on theme */
  font-size: 1.1rem; /* Font size for menu items */
  border-bottom: 1px solid var(--dropdown-item-border); /* Dynamic bottom border for separation */
  position: relative; /* Needed for positioning the hover overlay */
  overflow: hidden; /* Hides the sliding hover effect until it's active */
  z-index: 1; /* Ensures text is above the hover overlay */
}

/*
 * --- Cyan and Pink Faded Hover Animation for Dropdown Items ---
 * Creates a beautiful gradient overlay that slides over each dropdown item
 * when hovered, providing a dynamic and colorful visual feedback.
 */
.dropdown-item::before {
  content: ''; /* Required for pseudo-elements */
  position: absolute; /* Positions the overlay relative to the menu item */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, #00FFFF, #fcccfd); /* Aqua to Lighter Pink gradient */
  transform: translateX(-100%); /* Starts the overlay off-screen to the left */
  transition: transform 0.4s ease-in-out; /* Smooth transition for the overlay's movement */
  z-index: -1; /* Positions the overlay behind the text content */
  opacity: 0.8; /* Slight transparency for the overlay */
}

/* Moves the gradient overlay into full view when a dropdown item is hovered */
.dropdown-item:hover::before {
  transform: translateX(0);
}

/* Changes the text color to white when a dropdown item is hovered,
 * ensuring readability against the colorful overlay.
 */
.dropdown-item:hover {
  color: white;
}

/*
 * --- Theme Toggle Button ---
 * Styles for the button (sun/moon icon) that controls the page's theme (light/dark).
 * It's fixed in the top-right corner of the viewport.
 */
.theme-toggle {
  position: fixed; /* Keeps the button fixed during scrolling */
  top: 20px;
  right: 20px;
  font-size: 2.5rem; /* Significantly larger icon size for better visibility and tap target */
  cursor: pointer; /* Indicates the element is clickable */
  color: var(--text-color-primary); /* Dynamic icon color based on theme */
  z-index: 100; /* Ensures the button is above main content */
  transition: color 0.3s ease; /* Smooth color transition when theme changes */
}

.theme-toggle i {
  display: block; /* Ensures the Font Awesome icon behaves as a block element */
}


/*
 * --- Responsive Design Media Queries ---
 * These rules adjust the layout and styling of elements for different screen sizes,
 * ensuring the Modding Hub page is visually appealing and functional on various devices
 * (e.g., tablets, mobile phones).
 */

/* Styles for screens up to 768px wide (typically tablets) */
@media (max-width: 768px) {
  .main-nav-container {
    max-width: 100%; /* Allows the navigation grid to take full width */
    grid-template-columns: repeat(1, 1fr); /* Changes grid to a single column, stacking buttons vertically */
  }

  .header-section {
    max-width: 100%;
  }

  h1 {
    font-size: 2.5rem; /* Reduces the main title font size for tablets */
  }

  .profile-pic {
    width: 100px;
    height: 100px; /* Reduces the profile picture size for tablets */
  }

  .main-container {
    padding: 1rem; /* Adjusts overall padding */
    padding-top: 20px;
  }

  .header-section {
    padding: 0; /* Removes any padding from the header section */
  }

  /* Adjusts the 'break apart' effect for navigation buttons on tablets, making it less pronounced */
  .magnetic-button-wrapper:hover .fragment-1 {
    transform: translateX(-10px) translateY(-3px) rotate(-1deg);
  }

  .magnetic-button-wrapper:hover .fragment-2 {
    transform: translateX(10px) translateY(3px) rotate(2deg);
  }

  .dropdown-menu {
    width: 200px; /* Reduces the width of the dropdown menu */
    padding-top: 70px;
  }

  /* Adjusts the hamburger menu icon size and position for tablets */
  .menu-icon {
    width: 45px;
    height: 35px;
    top: 15px;
    left: 15px;
  }
  .menu-icon .bar {
    height: 4px; /* Reduces bar height */
  }
  .menu-icon.active .bar:nth-child(1) {
    transform: translateY(15px) rotate(45deg);
  }
  .menu-icon.active .bar:nth-child(3) {
    transform: translateY(-15px) rotate(-45deg);
  }

  .main-nav-button.magnetic-button {
    height: 180px; /* Adjusts the height of navigation buttons for tablets */
  }

  /* Adjusts theme toggle icon size and position for tablets */
  .theme-toggle {
    font-size: 2rem; /* Reduced font size for tablets */
    top: 15px;
    right: 15px;
  }
}

/* Styles for screens up to 480px wide (typically mobile phones) */
@media (max-width: 480px) {
  .main-nav-button {
    font-size: 1.1rem; /* Further reduces button text font size */
    padding: 1.5rem 2rem;
  }

  .main-nav-button > span {
    font-size: 1.3rem; /* Further reduces main button text font size */
  }

  h1 {
    font-size: 2rem; /* Further reduces main title font size for mobile */
  }

  /* Further reduces the 'break apart' effect for very small screens */
  .magnetic-button-wrapper:hover .fragment-1 {
    transform: translateX(-8px) translateY(-2px) rotate(-0.5deg);
  }

  .magnetic-button-wrapper:hover .fragment-2 {
    transform: translateX(8px) translateY(2px) rotate(0.5deg);
  }

  .dropdown-menu {
    width: 180px; /* Further reduces dropdown menu width */
    padding-top: 60px;
  }

  /* Adjusts hamburger menu icon size and position for mobile */
  .menu-icon {
    width: 40px;
    height: 30px;
    top: 10px;
    left: 10px;
  }
  .menu-icon .bar {
    height: 3px; /* Further reduces bar height */
  }
  .menu-icon.active .bar:nth-child(1) {
    transform: translateY(13.5px) rotate(45deg);
  }
  .menu-icon.active .bar:nth-child(3) {
    transform: translateY(-13.5px) rotate(-45deg);
  }

  .main-nav-button.magnetic-button {
    height: 160px; /* Further adjusts navigation button height */
  }

  /* Adjusts theme toggle icon size and position for mobile */
  .theme-toggle {
    font-size: 1.8rem; /* Further reduced font size for mobile, but still larger than original */
    top: 10px;
    right: 10px;
  }
}